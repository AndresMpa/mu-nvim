snippet do "To do reminder"
	<!--
	TODO:
	${1:desc}

	Written `!v strftime("%c")`
	By: `echo $USER`
	-->


snippet ex "Example"
	<${1:div}>
		Hello world
	</${1/(\w+).*/$1/}>


snippet ls "List"
	<${1:ul} ${2:class="$3"}>
		<li${4: class="$3__$5"}>$6</li>
		<li$4>$7</li>
		<li$4>$8</li>
	</${1/(\w+).*/$1/}>


snippet ma "Main default schema"
	<main ${1:id="$2" class="$3"}>
		<article class="$3--$4">
			$5
		</article>
	</main>


snippet awesome "Font Awesome CDN"
	<link
		rel="stylesheet"
		crossorigin="anonymous"
		href="https://use.fontawesome.com/releases/v6.0.0/css/all.css"
		integrity="sha384-3B6NwesSXE7YJlcLI9RpRqGf2p/EgVH8BgoKTaUrmKNDkHPStTQ3EyoYjCGXaOTS"
	/>
	<script
		src="https://kit.fontawesome.com/d3d80a9c81.js"
		crossorigin="anonymous">
	</script>


snippet animate "Animate.css CDN"
	<link
		rel="stylesheet"
		href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"
	/>


snippet og "Open graph protocal template"
	<!-- Preview description -->
	<meta property="og:type" content="website" />
	<meta property="og:title" content="${1:title}" />
	<meta property="og:description" content="${2:description}" />
	<meta property="og:url" content="${3:deploy url}" />

	<!-- Preview image -->
	<meta property="og:image" content="${4:img}" />
	<meta property="og:image:secure_url" content="${4:img}" />
	<meta property="og:image:alt" content="${5:img alt}" />
	<meta property="og:image:type" content="image/png" />
	<meta property="og:image:height" content="80" />
	<meta property="og:image:width" content="80" />
	<meta property="og:locale" content="en_GB" />

snippet ! "General HMLT 5 tempalte"
	<!DOCTYPE html>
	<html lang="${1:en}">
	<head>
		<meta charset="UTF-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<link rel="icon" type="image/x-icon" href="${2:./.assets/favicon.ico}" />
		<link rel="stylesheet" href="${3:styles/main.css}" />
		<title>${4:Document}</title>
	</head>
	<body>
		$5
	</body>
	</html>

snippet favicon "Favicon icon"
	<link rel="icon" type="image/x-icon" href="${1:/assets}/favicon.ico">


snippet a "Anchor tag"
	<a href="${1:url}">${2:text}</a>


snippet abbr "Abbrevieation tag"
	<abbr title=""${1:title}">${2:text}</abbr>


snippet address "Addres tag"
	<address>
		${1:address}
	</address>


snippet area "Area tag"
	<area title="${1:title}" href="${2:url}" shape="${3:shape}" coords="${4:coords}">


snippet article "Article tag"
	<article>
		${1:content}
	</article>


snippet aside "Aside tag"
	<aside>
		${1:content}
	</aside>


snippet audio "Audio tag"
	<audio src="${1:source}" controls></audio>


snippet b "Bold tag"
	<b>${1:content}</b>


snippet base "Base URL to relatives tag"
	<base href="${1:url}">


snippet bdi "Bidirectiona isolation tag"
	<bdi>${1:content}</bdi>


snippet bdo "Override direction tag"
	<bdo dir="${1:direction}">${2:content}</bdo>


snippet blockquote "Blockquotes tag"
	<blockquote cite="${1:url}">
		${2:content}
	</blockquote>


snippet body "Body tag"
	<body>
		${1:content}
	</body>


snippet br "Line break tag"
	<br>


snippet button "Clickabke button tag"
	<button>${1:content}</button>


snippet canvas "Canvas tag"
	<canvas>
		${1:content}
	</canvas>


snippet caption "Tables title tag"
	<caption>${1:content}</caption>


snippet cite "Cite tag"
	<cite>${1:content}</cite>


snippet code "Code tag"
	<code>${1:content}</code>


snippet col "Column tag"
	<col>${1:content}</col>


snippet colgroup "Group of columns tag"
	<colgroup>
		${1:content}
	</colgroup>


snippet data "Data tag"
	<data value=${1:data}>${2:content}</data>


snippet datalist "List of autocomplete options tag"
	<datalist id=${1:identifier}>
		${2:content}
	</datalist>


snippet dd "Definition tag"
	<dd>${1:content}</dd>


snippet del "Tag to define deleted information from a cite"
	<del cite="${1:url}">${2:content}</del>


snippet details "Details block tag"
	<details open="false">
		${1:content}
	</details>


snippet dfn "Term definition tag"
	<dfn>${1:content}</dfn>


snippet dialog "Defines a dialog box"
	<dialog>
		${1:content}
	</dialog>


snippet div "Generic block"
	<div>
		${1:content}
	</div>


snippet dl "Definition list tag"
	<dl>
		${1:content}
	</dl>


snippet dt "Definition term tag"
	<dt>
		${1:content}
	</dt>


snippet em "Emphasis tag"
	<em>${1:content}</em>


snippet embed "External app tag"
	<embed src="${1:url}" width="${2:width}" height="${3:height}">


snippet fieldset "Grops of controls"
	<fieldset id="">
		${1:content}
	</fieldset>


snippet figcaption "Caption for figures tags"
	<figcaption>${1:content}</figcaption>


snippet figure "Figure tag"
	<figure>
		${1:content}
	</figure>


snippet footer "Footer tag"
	<footer>
		${1:content}
	</footer>


snippet form "Form tag"
	<form action="${1:endpoint}" method="GET">
		${2:content}
	</form>


snippet h1 "h1 tag"
	<h1>${1:content}</h1>


snippet h2 "h2 tag"
	<h2>${1:content}</h2>


snippet h3 "h3 tag"
	<h3>${1:content}</h3>


snippet h4 "h4 tag"
	<h4>${1:content}</h4>


snippet h5 "h5 tag"
	<h5>${1:content}</h5>


snippet h6 "h6 tag"
	<h6>${1:content}</h6>


snippet head "Head tag"
	<head>
		${1:content}
	</head>


snippet header "Header tag"
	<header>
		${1:content}
	</header>


snippet hgroup "Defines a heading for a section"
	<hgroup>
		${1:content}
	</hgroup>


snippet hr "Semantic break tag"
	<hr>


snippet html "Html tag"
	<html>
		${1:content}
	</html>


snippet snippet i "Italic tag"
	<i>${1:content}</i>


snippet iframe "iframe tag"
	<iframe src"${1:url}">
		${2:It seems to be a mistake on external resource}
	</iframe>


snippet img "img tag"
	<img src="${1:url}" alt="${2:alt}">${3:content}>


snippet input "input tag"
	<input type="${1:text}" name="${2:name}" placeholder="${3:text}">


snippet ins "Inserted tag"
	<ins>${1:content}</ins>


snippet kbd "User input tag"
	<kbd>${1:content}</kbd>


snippet label "Label tag"
	<label for="${1:name}">${2:content}</label>


snippet legend "Legend for a parent content"
	<legend>${1:content}</legend>


snippet li "list item tag"
	<li>${1:content}</li>


snippet link "link"
	<link rel="stylesheet" type="text/css" href="${3:url}">


snippet main "main tag"
	<main>
		${1:content}
	</main>


snippet map "Map tag"
	<map name="${1:name}">


snippet mark "mark tag"
	<mark>${1:content}</mark>


snippet meta "meta tag"
	<meta ${1:content}>


snippet meter "meter tag"
	<meter value="${1:number}" min="${2:min}" low="${3:low}" high="${4:high}" max="${5:max}">
		${6:content}
	</meter>


snippet nav "nav tag"
	<nav>
		${1:content}
	</nav>


snippet noframes "noframes tag"
	<noframes>${1:content}</noframes>


snippet noscript "noscript tag"
	<noscript>${1:content}</noscript>


snippet object "object tag"
	<object type="${1:type}" data="${2:data}">
		${3:content}
	</object>


snippet ol "ol tag"
	<ol>
		${1:content}
	</ol>


snippet optgroup "optgroup tag"
	<optgroup label="${1:label}">
		${2:content}
	</optgroup>


snippet option "option tag"
	<option vale="${1:value}">${2:content}</option>


snippet output "output tag"
	<output name="${1:name}">${2:content}</output>


snippet p "p tag"
	<p>${1:content}</p>


snippet param "param tag"
	<param name="${1:name}" value="${2:value}">


snippet picture "picture tag"
	<picture>
		${1:content}
	</picture>


snippet pre "pre tag"
	<pre>${1:content}</pre>


snippet progress "progress tag"
	<progress value="${1:number}" max="${2:number}">${3:content}</progress>


snippet q "short quotation tag"
	<q cite="${1:cite}">${2:content}</q>


snippet rp "rp tag"
	<rp>${1:content}</rp>


snippet rt "pronunciation tag"
	<rt>${1:content}</rt>


snippet rtc "text containter tag"
	<rtc>${1:content}</rtc>


snippet ruby "ruby notation for East Asian characters tag"
	<ruby>
		${1:content}
	</ruby>


snippet s "strikethrough text tag"
	<s>${1:content}</s>


snippet samp "Sample of a program output tag"
	<samp>${1:content}</samp>


snippet script "script tag"
	<script src="${1:source}" type="text/javascript">${2:content}</script>


snippet section "section tag"
	<section>
		${1:content}
	</section>


snippet select "select tag"
	<select name="${1:name}">
		${2:content}
	</select>


snippet slot "slot tag"
	<slot>${1:content}</slot>


snippet small "small print tag"
	<small>${1:content}</small>


snippet source "source tag"
	<source src="${1:source}" srcset="${2:sources}"  type="${3:type}">


snippet span "span tag"
	<span>${1:content}</span>


snippet strong "strong tag"
	<strong>${1:content}</strong>


snippet style "style tag"
	<style>
		${1:content}
	</style>


snippet sub "sub tag"
	<sub>${1:content}</sub>


snippet summary "summary tag"
	<summary>${1:content}</summary>


snippet sup "sup tag"
	<sup>${1:content}</sup>


snippet table "table tag"
	<table>
		${1:content}
	</table>


snippet tbody "tbody tag"
	<tbody>
		${1:content}
	</tbody>


snippet td "td tag"
	<td colspan="${1:number}" rowspan="${2:number}">${3:content}</td>


snippet template "template tag"
	<template>
		${1:content}
	</template>


snippet textarea "textarea tag"
	<textarea name="${1:name}" rows="${2:number}" cols="${3:number}">
		${4:content}
	</textarea>


snippet tfoot "tfoot tag"
	<tfoot>
		${1:content}
	</tfoot>


snippet th "th tag"
	<th colspan="${1:number}" rowspan="${2:number}">${3:content}</th>


snippet thead "thead tag"
	<thead>
		${1:content}
	</thead>


snippet time "time tag"
	<time datetime="${1:date}">${2:content}</time>


snippet title "title tag"
	<title>${1:content}</title>


snippet tr "tr tag"
	<tr>
		${1:content}
	</tr>


snippet track "track tag"
	<track src="${1:content}" kind="captions" srclang="en" default>


snippet u "u tag"
	<u>${1:content}</u>


snippet ul "ul tag"
	<ul>
		${1:content}
	</ul>


snippet var "var tag"
	<var>${1:content}</var>


snippet video "video tag"
	<video src="${1:source}" controls></video>


snippet wbr "wbr tag"
	<wbr>


snippet accept "List of types the server accepts, typically a file type."
	accept="$1"


snippet accept-charset "List of supported charsets."
	accept-charset="$1"


snippet accesskey "Keyboard shortcut to activate or add focus to the element."
	accesskey="$1"


snippet action "The URI of a program that processes the information submitted via the form."
	action="$1"


snippet align "Specifies the horizontal alignment of the element."
	align="$1"


snippet allow "Specifies a feature-policy for the iframe."
	allow="$1"


snippet alt "Alternative text in case an image can't be displayed."
	alt="$1"


snippet async "Executes the script asynchronously."
	async="$1"


snippet autocapitalize "Sets whether input is automatically capitalized when entered by user"
	autocapitalize="$1"


snippet autocomplete "Indicates whether controls in this form can by default have their values automatically completed by the browser."
	autocomplete="$1"


snippet autofocus "The element should be automatically focused after the page loaded."
	autofocus="$1"


snippet autoplay "The audio or video should play as soon as possible."
	autoplay="$1"


snippet background "Although browsers and email clients may still support this attribute, it is obsolete. Use CSS background-image instead."
	background="$1"


snippet bgcolor "This is a legacy attribute. Please use the CSS background-color property instead."
	bgcolor="$1"


snippet border "This is a legacy attribute. Please use the CSS border property instead."
	border="$1"


snippet buffered "Contains the time range of already buffered media."
	buffered="$1"


snippet capture "From the Media Capture specification, specifies a new file can be captured."
	capture="$1"


snippet challenge "A challenge string that is submitted along with the public key."
	challenge="$1"


snippet charset "Declares the character encoding of the page or script."
	charset="$1"


snippet checked "Indicates whether the element should be checked on page load."
	checked="$1"


snippet cite "Contains a URI which points to the source of the quote or change."
	cite="$1"


snippet class "Often used with CSS to style elements with common properties."
	class="$1"


snippet code "Specifies the URL of the applet's class file to be loaded and executed."
	code="$1"


snippet codebase "This attribute gives the absolute or relative URL of the directory where applets' .class files referenced by the code attribute are stored."
	codebase="$1"


snippet color "This is a legacy attribute. Please use the CSS color property instead."
	color="$1"


snippet cols "Defines the number of columns in a textarea."
	cols="$1"


snippet colspan "The colspan attribute defines the number of columns a cell should span."
	colspan="$1"


snippet content "A value associated with http-equiv or name depending on the context."
	content="$1"


snippet contenteditable "Indicates whether the element's content is editable."
	contenteditable="$1"


snippet contextmenu "Defines the ID of a <menu> element which will serve as the element's context menu."
	contextmenu="$1"


snippet controls "Indicates whether the browser should show playback controls to the user."
	controls="$1"


snippet coords "A set of values specifying the coordinates of the hot-spot region."
	coords="$1"


snippet crossorigin "How the element handles cross-origin requests"
	crossorigin="$1"


snippet csp "Specifies the Content Security Policy that an embedded document must agree to enforce upon itself."
	csp="$1"


snippet data "Specifies the URL of the resource."
	data="$1"


snippet data-* "Lets you attach custom attributes to an HTML element."
	data-*="$1"


snippet datetime "Indicates the date and time associated with the element."
	datetime="$1"


snippet decoding "Indicates the preferred method to decode the image."
	decoding="$1"


snippet default "Indicates that the track should be enabled unless the user's preferences indicate something different."
	default="$1"


snippet defer "Indicates that the script should be executed after the page has been parsed."
	defer="$1"


snippet dir "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
	dir="$1"


snippet dirname ""
	dirname="$1"


snippet disabled "Indicates whether the user can interact with the element."
	disabled="$1"


snippet download "Indicates that the hyperlink is to be used for downloading a resource."
	download="$1"


snippet draggable "Defines whether the element can be dragged."
	draggable="$1"


snippet enctype "Defines the content type of the form data when the method is POST."
	enctype="$1"


snippet enterkeyhint "The enterkeyhint specifies what action label (or icon) to present for the enter key on virtual keyboards. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute)."
	enterkeyhint="$1"


snippet for "Describes elements which belongs to this one."
	for="$1"


snippet form "Indicates the form that is the owner of the element."
	form="$1"


snippet formaction "Indicates the action of the element, overriding the action defined in the <form>."
	formaction="$1"


snippet formenctype "If the button/input is a submit button (type="submit"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides the enctype attribute of the button's form owner."
	formenctype="$1"


snippet formmethod "If the button/input is a submit button (type="submit"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button's form owner."
	formmethod="$1"


snippet formnovalidate "If the button/input is a submit button (type="submit"), this boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the novalidate attribute of the button's form owner."
	formnovalidate="$1"


snippet formtarget "If the button/input is a submit button (type="submit"), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received after submitting the form. If this attribute is specified, it overrides the target attribute of the button's form owner."
	formtarget="$1"


snippet headers "IDs of the <th> elements which applies to this element."
	headers="$1"


snippet height "In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead."
	height="$1"


snippet hidden "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
	hidden="$1"


snippet high "Indicates the lower bound of the upper range."
	high="$1"


snippet href "The URL of a linked resource."
	href="$1"


snippet hreflang "Specifies the language of the linked resource."
	hreflang="$1"


snippet http-equiv "Defines a pragma directive."
	http-equiv="$1"


snippet icon "Specifies a picture which represents the command."
	icon="$1"


snippet id "Often used with CSS to style a specific element. The value of this attribute must be unique."
	id="$1"


snippet importance "Indicates the relative fetch priority for the resource."
	importance="$1"


snippet integrity "Specifies a Subresource Integrity value that allows browsers to verify what they fetch."
	integrity="$1"


snippet intrinsicsize "This attribute tells the browser to ignore the actual intrinsic size of the image and pretend it's the size specified in the attribute."
	intrinsicsize="$1"


snippet inputmode "Provides a hint as to the type of data that might be entered by the user while editing the element or its contents. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute)."
	inputmode="$1"


snippet ismap "Indicates that the image is part of a server-side image map."
	ismap="$1"


snippet itemprop ""
	itemprop="$1"


snippet keytype "Specifies the type of key generated."
	keytype="$1"


snippet kind "Specifies the kind of text track."
	kind="$1"


snippet label "Specifies a user-readable title of the element."
	label="$1"


snippet lang "Defines the language used in the element."
	lang="$1"


snippet language "Defines the script language used in the element."
	language="$1"


snippet loading "Indicates if the element should be loaded lazily (loading="lazy") or loaded immediately (loading="eager")."
	loading="$1"


snippet list "Identifies a list of pre-defined options to suggest to the user."
	list="$1"


snippet loop "Indicates whether the media should start playing from the start when it's finished."
	loop="$1"


snippet low "Indicates the upper bound of the lower range."
	low="$1"


snippet manifest "This attribute is obsolete, use <link rel="manifest"> instead."
	manifest="$1"


snippet max "Indicates the maximum value allowed."
	max="$1"


snippet maxlength "Defines the maximum number of characters allowed in the element."
	maxlength="$1"


snippet minlength "Defines the minimum number of characters allowed in the element."
	minlength="$1"


snippet media "Specifies a hint of the media for which the linked resource was designed."
	media="$1"


snippet method "Defines which HTTP method to use when submitting the form. Can be GET (default) or POST."
	method="$1"


snippet min "Indicates the minimum value allowed."
	min="$1"


snippet multiple "Indicates whether multiple values can be entered in an input of the type email or file."
	multiple="$1"


snippet muted "Indicates whether the audio will be initially silenced on page load."
	muted="$1"


snippet name "Name of the element. For example used by the server to identify the fields in form submits."
	name="$1"


snippet novalidate "This attribute indicates that the form shouldn't be validated when submitted."
	novalidate="$1"


snippet open "Indicates whether the contents are currently visible (in the case of a <details> element) or whether the dialog is active and can be interacted with (in the case of a <dialog> element)."
	open="$1"


snippet optimum "Indicates the optimal numeric value."
	optimum="$1"


snippet pattern "Defines a regular expression which the element's value will be validated against."
	pattern="$1"


snippet ping "The ping attribute specifies a space-separated list of URLs to be notified if a user follows the hyperlink."
	ping="$1"


snippet placeholder "Provides a hint to the user of what can be entered in the field."
	placeholder="$1"


snippet playsinline "A Boolean attribute indicating that the video is to be played "inline"; that is, within the element's playback area. Note that the absence of this attribute does not imply that the video will always be played in fullscreen."
	playsinline="$1"


snippet poster "A URL indicating a poster frame to show until the user plays or seeks."
	poster="$1"


snippet preload "Indicates whether the whole resource, parts of it or nothing should be preloaded."
	preload="$1"


snippet radiogroup ""
	radiogroup="$1"


snippet readonly "Indicates whether the element can be edited."
	readonly="$1"


snippet referrerpolicy "Specifies which referrer is sent when fetching the resource."
	referrerpolicy="$1"


snippet rel "Specifies the relationship of the target object to the link object."
	rel="$1"


snippet required "Indicates whether this element is required to fill out or not."
	required="$1"


snippet reversed "Indicates whether the list should be displayed in a descending order instead of an ascending order."
	reversed="$1"


snippet role "Defines an explicit role for an element for use by assistive technologies."
	role="$1"


snippet rows "Defines the number of rows in a text area."
	rows="$1"


snippet rowspan "Defines the number of rows a table cell should span over."
	rowspan="$1"


snippet sandbox "Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows)."
	sandbox="$1"


snippet scope "Defines the cells that the header test (defined in the th element) relates to."
	scope="$1"


snippet scoped ""
	scoped="$1"


snippet selected "Defines a value which will be selected on page load."
	selected="$1"


snippet shape ""
	shape="$1"


snippet size "Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters."
	size="$1"


snippet sizes ""
	sizes="$1"


snippet slot "Assigns a slot in a shadow DOM shadow tree to an element."
	slot="$1"


snippet span ""
	span="$1"


snippet spellcheck "Indicates whether spell checking is allowed for the element."
	spellcheck="$1"


snippet src "The URL of the embeddable content."
	src="$1"


snippet srcdoc ""
	srcdoc="$1"


snippet srclang ""
	srclang="$1"


snippet srcset "One or more responsive image candidates."
	srcset="$1"


snippet start "Defines the first number if other than 1."
	start="$1"


snippet step ""
	step="$1"


snippet style "Defines CSS styles which will override styles previously set."
	style="$1"


snippet summary ""
	summary="$1"


snippet tabindex "Overrides the browser's default tab order and follows the one specified instead."
	tabindex="$1"


snippet target "Specifies where to open the linked document (in the case of an <a> element) or where to display the response received (in the case of a <form> element)"
	target="$1"


snippet title "Text to be displayed in a tooltip when hovering over the element."
	title="$1"


snippet translate "Specify whether an element's attribute values and the values of its Text node children are to be translated when the page is localized, or whether to leave them unchanged."
	translate="$1"


snippet type "Defines the type of the element."
	type="$1"


snippet usemap ""
	usemap="$1"


snippet value "Defines a default value which will be displayed in the element on page load."
	value="$1"


snippet width "For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead."
	width="$1"


snippet wrap "Indicates whether the text should be wrapped."
	wrap="$1"
