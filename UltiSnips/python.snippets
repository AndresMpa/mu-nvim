# Print and end line
snippet prt "print()" i
print(${1:$2}, end='')
endsnippet

# Print in line
snippet prl "print(, end='')" b
print(${1: $2 }, end='\n')
endsnippet

# Tipe of
snippet type "Type of for debuggig" b
print(type($1))
endsnippet

# Import
snippet imp "import " b
import ${1: $2 }
endsnippet

# Dinamic import
snippet imf "form X import Y" b
from $1 import $2 as $3
endsnippet

# Try block
snippet try "Try except block" b
try:
    $1
except:
    ${2:continue}
endsnippet

# Functions
snippet fun "Function declaration" i
def $1(${2:$3}):
    ${4:$5}
endsnippet

# Lambda function
snippet lam "Lambda function declaration" b
lambda $1: $2
endsnippet

# Anonymous lambda function
snippet afu "Anonymous lambda function declaration" i
def $1($2):
    return lambda $1: $2
endsnippet

# Basic object declaration
snippet obj "Python object declaration" b
class $1:
    def __init__(self, $2):
        self.$2 = $2
endsnippet

# Main function
snippet ini "Basic python main function" b
if __name__ == "__main__"($1):
    ${2:pass}
endsnippet

snippet dj_test "D" b
class $1(TestCase):
    def setUp(self):
        pass

    def tearDown(self):
        pass

    def passTest(self):
        self.assertFalse(False)

    def failTest(self):
        self.assertTrue(False)
endsnippet
